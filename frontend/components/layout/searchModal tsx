import React, { useEffect, useState } from 'react'

interface Shortcut {
  title: string
  action: () => void
}

const shortcuts: Shortcut[] = [
  { title: 'Open Dashboard', action: () => console.log('Dashboard') },
  { title: 'New Project', action: () => console.log('New Project') },
  { title: 'Team Members', action: () => console.log('Team Members') },
  { title: 'Settings', action: () => console.log('Settings') },
  { title: 'Analytics', action: () => console.log('Analytics') },
  { title: 'Messages', action: () => console.log('Messages') },
]

const SearchModal: React.FC = () => {
  const [open, setOpen] = useState(false)
  const [query, setQuery] = useState('')

  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if ((e.ctrlKey || e.metaKey) && e.key === 'e') {
        e.preventDefault()
        setOpen((prev) => !prev)
      }
      if (e.key === 'Escape') setOpen(false)
    }
    window.addEventListener('keydown', handleKeyDown)
    return () => window.removeEventListener('keydown', handleKeyDown)
  }, [])

  const filteredShortcuts = shortcuts.filter((s) =>
    s.title.toLowerCase().includes(query.toLowerCase())
  )

  if (!open) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white dark:bg-gray-800 w-96 p-6 rounded-lg shadow-lg">
        <input
          type="text"
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="Search..."
          className="w-full px-4 py-2 rounded border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <ul className="mt-4 max-h-64 overflow-y-auto">
          {filteredShortcuts.map((shortcut) => (
            <li
              key={shortcut.title}
              onClick={() => {
                shortcut.action()
                setOpen(false)
              }}
              className="px-4 py-2 rounded hover:bg-gray-200 dark:hover:bg-gray-600 cursor-pointer"
            >
              {shortcut.title}
            </li>
          ))}
          {filteredShortcuts.length === 0 && (
            <li className="px-4 py-2 text-gray-500 dark:text-gray-400">No results</li>
          )}
        </ul>
      </div>
    </div>
  )
}

export default SearchModal
